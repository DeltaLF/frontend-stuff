{"version":3,"file":"static/js/10.ef9df2ac.chunk.js","mappings":"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","sources":["components/common/loading/LoadingWrapper.tsx","components/common/loading/ShowArticle.tsx","hooks/useForm/FormComponent.tsx","hooks/useForm/useForm.ts","components/common/tabs/CustomTabs.tsx","components/common/modal/CustomModal.tsx","components/common/modal/ModalExampleComponent.tsx","components/pages/utilsPage/UtilsPage.tsx","../node_modules/react-bootstrap/esm/Button.js"],"sourcesContent":["import React, { ReactElement, useEffect, useState } from 'react';\r\n\r\ninterface ILoadingWrapper<T> {\r\n  loadData: () => Promise<T>;\r\n  renderData: (data: T) => ReactElement;\r\n}\r\n\r\nfunction LoadingWrapper<T>({ loadData, renderData }: ILoadingWrapper<T>) {\r\n  const [data, setData] = useState<null | T>(null);\r\n  const [error, setError] = useState('');\r\n  useEffect(() => {\r\n    // not sure when should the laodData be invoked\r\n    loadData()\r\n      .then((data) => {\r\n        setData(data);\r\n      })\r\n      .catch((error) => {\r\n        if (typeof error === 'string') {\r\n          setError(error);\r\n        } else {\r\n          setError('Something went wrong!');\r\n        }\r\n      });\r\n  }, []);\r\n  if (error) return <div>{error}</div>;\r\n  if (data === null) {\r\n    return <div>loading effect</div>;\r\n  } else {\r\n    return <div>{renderData(data)}</div>;\r\n  }\r\n}\r\n\r\nexport default LoadingWrapper;\r\n","import React from 'react';\r\nimport LoadingWrapper from './LoadingWrapper';\r\n\r\nfunction ShowArticle() {\r\n  function reFetchArticle() {\r\n    // axois.get('/articles')\r\n    // mimic get from server\r\n    return new Promise<string>((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (Math.floor(Math.random() * 2) === 0) {\r\n          resolve('article one');\r\n        } else {\r\n          reject('fail');\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n  function renderArticle(data: string | number) {\r\n    return <div>{data}</div>;\r\n  }\r\n  return (\r\n    <div className=\"mt-5\">\r\n      <h3>article</h3>\r\n      <button onClick={reFetchArticle}>Refetch article</button>\r\n      <LoadingWrapper<string | number>\r\n        loadData={reFetchArticle}\r\n        renderData={renderArticle}\r\n      ></LoadingWrapper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShowArticle;\r\n","import React from 'react';\r\nimport { useForm } from './useForm';\r\nimport { ValidationRule } from './useForm.type';\r\n\r\ninterface LoginReq {\r\n  account: string;\r\n  pwd: string;\r\n}\r\n\r\nconst validationRule: ValidationRule<LoginReq> = {\r\n  account: (v) => v.length > 8,\r\n  pwd: (v) => v.length > 12,\r\n};\r\n\r\nfunction FormComponent() {\r\n  const [loginReq, formSetter, validationResult] = useForm<LoginReq>(\r\n    {\r\n      account: '',\r\n      pwd: '',\r\n    },\r\n    validationRule\r\n  );\r\n\r\n  return (\r\n    <form className=\"login-form\">\r\n      <label htmlFor=\"account\">Account</label>\r\n      <input\r\n        id=\"account\"\r\n        type=\"text\"\r\n        value={loginReq.account}\r\n        onChange={formSetter.account}\r\n      />\r\n      <div className=\"invalid\">{validationResult.account?.error}</div>\r\n\r\n      <label htmlFor=\"password\">Password</label>\r\n      <input\r\n        id=\"password\"\r\n        type=\"password\"\r\n        value={loginReq.pwd}\r\n        onChange={formSetter.pwd}\r\n      />\r\n      <div className=\"invalid\">{validationResult.pwd?.error}</div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default FormComponent;\r\n","import { useState } from 'react';\r\nimport {\r\n  ValidationRule,\r\n  FormSetter,\r\n  ValidationResult,\r\n  Entries,\r\n} from './useForm.type';\r\n\r\nfunction useForm<T extends object>(\r\n  initDataModel: T,\r\n  validationRule: ValidationRule<T>\r\n): [T, FormSetter<T>, ValidationResult<T>] {\r\n  const [dataModel, setDataModel] = useState<T>(initDataModel);\r\n  const validationResult: ValidationResult<T> = {};\r\n  const formSetter: FormSetter<T> = {};\r\n  for (const [key, value] of Object.entries(dataModel) as Entries<T>) {\r\n    formSetter[key] = (event) => {\r\n      setDataModel({ ...dataModel, [key]: event.target.value });\r\n    };\r\n    if (validationRule[key]!(value)) {\r\n      validationResult[key] = { error: `invalid input of ${key.toString()}` };\r\n    } else {\r\n      validationResult[key] = {};\r\n    }\r\n  }\r\n\r\n  return [dataModel, formSetter, validationResult];\r\n}\r\n\r\nexport { useForm };\r\n","import React, { ReactElement, useEffect, useState } from 'react';\r\nimport './customTabs.scss';\r\n\r\nexport type TabProps = {\r\n  eventKey: string;\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport const CustomTab: React.FC<TabProps> = ({ eventKey, children }) => {\r\n  return <>{children}</>;\r\n};\r\n\r\ninterface ICustomTabsProps {\r\n  tabsArray: ReactElement<TabProps>[];\r\n  activeKey?: string;\r\n}\r\n\r\nfunction CustomTabs({ tabsArray, activeKey }: ICustomTabsProps) {\r\n  const [currTab, setCurrentTab] = useState<string>(\r\n    activeKey || tabsArray[0].props.eventKey\r\n  );\r\n\r\n  //   useEffect(() => {\r\n  //     console.log('CustomTabs did mount');\r\n  //     return () => {\r\n  //       console.log('CustomTabs will unmount');\r\n  //     };\r\n  //   }, []);\r\n  function handleClick(title: string): void {\r\n    setCurrentTab(title);\r\n  }\r\n  return (\r\n    <div className=\"customTabs\">\r\n      <h1>tabs</h1>\r\n      <div className=\"customTabs__header\">\r\n        {tabsArray.map((tab) => {\r\n          const { eventKey } = tab.props;\r\n          return (\r\n            <div\r\n              key={eventKey}\r\n              className={`customTabs__title ${\r\n                eventKey === currTab ? 'customTabs__title--highlight' : ''\r\n              }`}\r\n              onClick={() => {\r\n                handleClick(eventKey);\r\n              }}\r\n            >\r\n              {eventKey}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"customTabs__body\">\r\n        {tabsArray.map((TabElement, ind) => {\r\n          const { eventKey } = TabElement.props;\r\n          if (currTab === eventKey) {\r\n            return <div key={ind}> {TabElement} </div>;\r\n          }\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomTabs;\r\n","import React, { ReactNode } from 'react';\r\nimport './customModal.scss';\r\n\r\ntype CustomModalProps = {\r\n  children: ReactNode;\r\n  show?: boolean;\r\n};\r\n\r\nfunction CustomModal({ children, show = false }: CustomModalProps) {\r\n  return (\r\n    <>\r\n      {/* a css position reference */}\r\n      {show && <div className=\"customModal\">{children}</div>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CustomModal;\r\n","import { Button } from 'react-bootstrap';\r\nimport CustomModal from './CustomModal';\r\nimport React, { useState } from 'react';\r\n\r\nfunction ModalExampleComponent() {\r\n  const [shouldShow, setShouldShow] = useState(false);\r\n  function handleShow() {\r\n    setShouldShow(!shouldShow);\r\n  }\r\n  return (\r\n    <>\r\n      <Button onClick={handleShow}>open modal</Button>\r\n      <CustomModal show={shouldShow}>\r\n        <h1>modal</h1>\r\n        <div className=\"modal__body\">\r\n          <p>this is a custom modal</p>\r\n          <Button variant=\"danger\" onClick={handleShow}>\r\n            Close\r\n          </Button>\r\n          <Button onClick={handleShow}>Save</Button>\r\n        </div>\r\n      </CustomModal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ModalExampleComponent;\r\n","import React, { ReactElement } from 'react';\r\nimport ShowArticle from '../../common/loading/ShowArticle';\r\nimport FormComponent from '../../../hooks/useForm/FormComponent';\r\nimport CustomTabs, { TabProps, CustomTab } from '../../common/tabs/CustomTabs';\r\nimport ModalExampleComponent from '../../common/modal/ModalExampleComponent';\r\n\r\nconst UtilsPage = () => {\r\n  const tabArrays: ReactElement<TabProps>[] = [\r\n    <CustomTab key=\"showArticle\" eventKey=\"showArticle\">\r\n      <ShowArticle />\r\n    </CustomTab>,\r\n    <CustomTab key=\"formComponent\" eventKey=\"formComponent\">\r\n      <FormComponent />\r\n    </CustomTab>,\r\n    <CustomTab key=\"modalComponent\" eventKey=\"modalComponent\">\r\n      <ModalExampleComponent />\r\n    </CustomTab>,\r\n  ];\r\n  return (\r\n    <div>\r\n      Utils page\r\n      <div\r\n        className=\"tabsComponet\"\r\n        style={{\r\n          width: '80%',\r\n          margin: 'auto',\r\n          border: '1px solid gray',\r\n          padding: '1rem',\r\n        }}\r\n      >\r\n        <CustomTabs tabsArray={tabArrays} activeKey=\"formComponent\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UtilsPage;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;"],"names":["loadData","renderData","useState","data","setData","error","setError","useEffect","then","catch","reFetchArticle","Promise","resolve","reject","setTimeout","Math","floor","random","className","onClick","validationRule","account","v","length","pwd","initDataModel","dataModel","setDataModel","validationResult","formSetter","Object","entries","key","value","event","target","toString","useForm","loginReq","htmlFor","id","type","onChange","CustomTab","eventKey","children","tabsArray","activeKey","props","currTab","setCurrentTab","map","tab","TabElement","ind","show","shouldShow","setShouldShow","handleShow","Button","variant","tabArrays","style","width","margin","border","padding","React","ref","as","bsPrefix","size","active","prefix","useBootstrapPrefix","useButtonProps","tagName","buttonProps","Component","_jsx","classNames","href","disabled","displayName","defaultProps"],"sourceRoot":""}